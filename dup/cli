#!/bin/bash
set -o nounset
set -o errexit

DUP_LIB_PATH="${DUP_LIB_PATH:-$(dirname "$0")/scripts/lib/duplib.sh}";
source "$DUP_LIB_PATH";

DUP_CLI_DIRECTORY_PATH="$(dirname "$0")/scripts/cli";

# --------------------------------------------------------
# Subcommands
# --------------------------------------------------------
function dupcli::list_plugins() {
    for plugin in $(dupcli::_list_plugin_files); do
        basename $plugin ".sh";
    done
}

# --------------------------------------------------------
# Helper methods
# --------------------------------------------------------
function dupcli::_print_help() {
    echo "Usage $0 <command> [<args>]

Commands:";
    for command in $(dupcli::_list_commands;); do
        echo "    $command";
    done

#     echo "Usage $0 <command> [<args>]
#
# Commands:
#     download user@server    downloads fileadmin and typo3conf using rsync
#     halt                    stops the vagrant machine
#     provision               provisions the vagrant machine
#     ssh                     connects to the vagrant machine via SSH
#     up                      starts and provisions the vagrant environment
# ";
}

function dupcli::_list_plugin_files() {
    find $DUP_CLI_DIRECTORY_PATH/plugins -maxdepth 1 -type f -iname '*.sh';
}

function dupcli::_load_plugins() {
    for plugin in $(dupcli::_list_plugin_files); do
        source $plugin;
    done
}

function dupcli::_list_commands() {
    local line_start='declare -f dupcli::';
    declare -F|grep "$line_start"|sed "s/$line_start//"|sed "/^_/d";
}

function main() {
    dupcli::_load_plugins;
    if [[ -z ${1+x} ]]; then
        dupcli::_print_help;
        return 1;
    fi;

    local subcommand="$1";
    shift;

    if type "dupcli::$subcommand" &> /dev/null; then
        dupcli::$subcommand $@;
    else
        dupcli::_print_help;
        return 1;
    fi
}

main $@;
